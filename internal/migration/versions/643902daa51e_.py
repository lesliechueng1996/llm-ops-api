"""empty message

Revision ID: 643902daa51e
Revises: 8b46809eaa55
Create Date: 2024-12-23 20:06:29.403982

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '643902daa51e'
down_revision = '8b46809eaa55'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversation',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('summary', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('invoke_from', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_conversation_id')
    )
    with op.batch_alter_table('conversation', schema=None) as batch_op:
        batch_op.create_index('idx_conversation_app_id', ['app_id'], unique=False)
        batch_op.create_index('idx_conversation_created_by', ['created_by'], unique=False)

    op.create_table('message',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('invoke_from', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('query', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('message', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('message_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('message_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('message_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0.0'), nullable=False),
    sa.Column('answer', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('answer_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('answer_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('answer_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0.0'), nullable=False),
    sa.Column('latency', sa.Float(), server_default=sa.text('0.0'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('status', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('error', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('total_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_message_id')
    )
    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.create_index('idx_message_app_id', ['app_id'], unique=False)
        batch_op.create_index('idx_message_conversation_id', ['conversation_id'], unique=False)
        batch_op.create_index('idx_message_created_by', ['created_by'], unique=False)

    op.create_table('message_agent_thought',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('invoke_from', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('event', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('thought', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('observation', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('tool', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('tool_input', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('message', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('message_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('message_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('message_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0'), nullable=False),
    sa.Column('answer', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('answer_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('answer_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('answer_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0.0'), nullable=False),
    sa.Column('total_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('latency', sa.Float(), server_default=sa.text('0.0'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_message_agent_thought_id')
    )
    with op.batch_alter_table('message_agent_thought', schema=None) as batch_op:
        batch_op.create_index('idx_message_agent_thought_app_id', ['app_id'], unique=False)
        batch_op.create_index('idx_message_agent_thought_conversation_id', ['conversation_id'], unique=False)
        batch_op.create_index('idx_message_agent_thought_message_id', ['message_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('message_agent_thought', schema=None) as batch_op:
        batch_op.drop_index('idx_message_agent_thought_message_id')
        batch_op.drop_index('idx_message_agent_thought_conversation_id')
        batch_op.drop_index('idx_message_agent_thought_app_id')

    op.drop_table('message_agent_thought')
    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.drop_index('idx_message_created_by')
        batch_op.drop_index('idx_message_conversation_id')
        batch_op.drop_index('idx_message_app_id')

    op.drop_table('message')
    with op.batch_alter_table('conversation', schema=None) as batch_op:
        batch_op.drop_index('idx_conversation_created_by')
        batch_op.drop_index('idx_conversation_app_id')

    op.drop_table('conversation')
    # ### end Alembic commands ###
